name: Build the flashcards viewer

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build the flashcards viewer
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache pip dependencies
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install NPM dependencies
        run: npm install -g lightningcss-cli uglify-js @sentry/cli

      - name: Install pip dependencies
        run: pip install minify-html

      - name: Download external assets
        run: python download_assets.py

      - name: Build the documentation
        run: |
          mkdir site
          cp -r index.html static/ site/

      - name: Add Sentry DSN
        if: ${{ env.SENTRY_DSN }}
        run: python add_sentry.py
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Add version in service worker
        run: python add_version_in_sw.py

      - name: Add hash to all static files
        run: python add_hash.py

      - name: Minify static files
        run: python minify.py

      - name: Send source maps to Sentry
        if: ${{ env.SENTRY_AUTH_TOKEN }}
        run: |
          sentry-cli sourcemaps inject site/
          sentry-cli sourcemaps upload site/
        env:
          SENTRY_ORG: ${{ env.SENTRY_ORG || 'lfavole' }}
          SENTRY_PROJECT: ${{ env.SENTRY_PROJECT || 'flashcards-viewer' }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

  deploy:
    name: Deploy to GitHub Pages
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
